name: Test Package

on: push

env:
  SRH_TOKEN: example_token

jobs:
  test-core:
    name: Testing Core Package
    strategy:
      matrix:
        node-version: [lts/*, latest]
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
      - name: Use Pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
      - name: Use Node ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: "https://registry.npmjs.org"
          cache: "pnpm"
      - name: Install dependencies
        run: pnpm install
      - name: Run library tests
        run: |
          pnpm install
          pnpm nx test core
  test-redis:
    name: Testing Redis Package
    runs-on: ubuntu-latest
    container: denoland/deno
    services:
      redis:
        image: redis/redis-stack-server:6.2.6-v6 # 6.2 is the Upstash compatible Redis version
      srh:
        image: hiett/serverless-redis-http:latest
        env:
          SRH_MODE: env # We are using env mode because we are only connecting to one server.
          SRH_TOKEN: ${{ env.SRH_TOKEN }}
          SRH_CONNECTION_STRING: redis://redis:6379

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
      - name: Use Pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
      - name: Use Node lts
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          registry-url: "https://registry.npmjs.org"
          cache: "pnpm"
      - name: Install dependencies
        run: pnpm install
      - name: Run library tests
        run: |
          pnpm install
          pnpm nx test redis
        env:
          UPSTASH_REDIS_REST_URL: http://srh:80
          UPSTASH_REDIS_REST_TOKEN: ${{ env.SRH_TOKEN }}
